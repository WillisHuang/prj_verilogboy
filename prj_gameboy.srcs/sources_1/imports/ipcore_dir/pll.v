////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : xaw2verilog
//  /   /         Filename : pll.v
// /___/   /\     Timestamp : 02/07/2018 12:16:26
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: xaw2verilog -st C:\Users\ZephRay\Documents\GitHub\GameBoy\Verilog\GameBoy\ipcore_dir\.\pll.xaw C:\Users\ZephRay\Documents\GitHub\GameBoy\Verilog\GameBoy\ipcore_dir\.\pll
//Design Name: pll
//Device: xc5vlx50t-1ff1136
//
// Module pll
// Generated by Xilinx Architecture Wizard
// Written for synthesis tool: XST
// For block PLL_ADV_INST, Estimated PLL Jitter for CLKOUT0 = 0.409 ns
// For block PLL_ADV_INST, Estimated PLL Jitter for CLKOUT1 = 0.227 ns
`timescale 1ns / 1ps

module pll(CLKIN1_IN, 
           RST_IN, 
           CLKOUT0_OUT, 
           CLKOUT1_OUT, 
           CLKOUT2_OUT, 
           CLKOUT3_OUT, 
           LOCKED_OUT);

    input CLKIN1_IN;
    input RST_IN;
   output CLKOUT0_OUT;
   output CLKOUT1_OUT;
   output CLKOUT2_OUT;
   output CLKOUT3_OUT;
   output LOCKED_OUT;
   
   wire CLKFBOUT_CLKFBIN;
   wire CLKIN1_IBUFG;
   wire CLKOUT0_BUF;
   wire CLKOUT1_BUF;
   wire GND_BIT;
   wire [4:0] GND_BUS_5;
   wire [15:0] GND_BUS_16;
   wire VCC_BIT;
   
   assign GND_BIT = 0;
   assign GND_BUS_5 = 5'b00000;
   assign GND_BUS_16 = 16'b0000000000000000;
   assign VCC_BIT = 1;
   IBUFG  CLKIN1_IBUFG_INST (.I(CLKIN1_IN), 
                            .O(CLKIN1_IBUFG));
   BUFG  CLKOUT0_BUFG_INST (.I(CLKOUT0_BUF), 
                           .O(CLKOUT0_OUT));
   BUFG  CLKOUT1_BUFG_INST (.I(CLKOUT1_BUF), 
                           .O(CLKOUT1_OUT));
   BUFG  CLKOUT2_BUFG_INST (.I(CLKOUT2_BUF), 
                            .O(CLKOUT2_OUT));
   BUFG  CLKOUT3_BUFG_INST (.I(CLKOUT3_BUF), 
                            .O(CLKOUT3_OUT));
   // PLLE2_ADV #( .BANDWIDTH("OPTIMIZED"), .CLKIN1_PERIOD(30.003), 
         // .CLKIN2_PERIOD(10.000), .CLKOUT0_DIVIDE(119), .CLKOUT1_DIVIDE(5), 
         // .CLKOUT0_PHASE(0.000), .CLKOUT1_PHASE(0.000), 
         // .CLKOUT0_DUTY_CYCLE(0.500), .CLKOUT1_DUTY_CYCLE(0.500), 
         // .COMPENSATION("SYSTEM_SYNCHRONOUS"), .DIVCLK_DIVIDE(1), 
         // .CLKFBOUT_MULT(15), .CLKFBOUT_PHASE(0.0), .REF_JITTER1(0.005000) ) 
         // PLL_ADV_INST (.CLKFBIN(CLKFBOUT_CLKFBIN), 
                         // .CLKINSEL(VCC_BIT), 
                         // .CLKIN1(CLKIN1_IBUFG), 
                         // .CLKIN2(GND_BIT), 
                         // .DADDR(GND_BUS_5[4:0]), 
                         // .DCLK(GND_BIT), 
                         // .DEN(GND_BIT), 
                         // .DI(GND_BUS_16[15:0]), 
                         // .DWE(GND_BIT), 
                         // .REL(GND_BIT), 
                         // .RST(RST_IN), 
                         // .CLKFBDCM(), 
                         // .CLKFBOUT(CLKFBOUT_CLKFBIN), 
                         // .CLKOUTDCM0(), 
                         // .CLKOUTDCM1(), 
                         // .CLKOUTDCM2(), 
                         // .CLKOUTDCM3(), 
                         // .CLKOUTDCM4(), 
                         // .CLKOUTDCM5(), 
                         // .CLKOUT0(CLKOUT0_BUF), 
                         // .CLKOUT1(CLKOUT1_BUF), 
                         // .CLKOUT2(), 
                         // .CLKOUT3(), 
                         // .CLKOUT4(), 
                         // .CLKOUT5(), 
                         // .DO(), 
                         // .DRDY(), 
                         // .LOCKED(LOCKED_OUT));
						 
// PLLE2_ADV #(
//      .BANDWIDTH("OPTIMIZED"),  // OPTIMIZED, HIGH, LOW
//      .CLKFBOUT_MULT(15),        // Multiply value for all CLKOUT, (2-64)
//      .CLKFBOUT_PHASE(0.0),     // Phase offset in degrees of CLKFB, (-360.000-360.000).
//      // CLKIN_PERIOD: Input clock period in nS to ps resolution (i.e. 33.333 is 30 MHz).
//      .CLKIN1_PERIOD(30.003),
//      .CLKIN2_PERIOD(37.037),
//      // CLKOUT0_DIVIDE - CLKOUT5_DIVIDE: Divide amount for CLKOUT (1-128)
//      .CLKOUT0_DIVIDE(119),
//      .CLKOUT1_DIVIDE(5),
//      .CLKOUT2_DIVIDE(1),
//      .CLKOUT3_DIVIDE(1),
//      .CLKOUT4_DIVIDE(1),
//      .CLKOUT5_DIVIDE(1),
//      // CLKOUT0_DUTY_CYCLE - CLKOUT5_DUTY_CYCLE: Duty cycle for CLKOUT outputs (0.001-0.999).
//      .CLKOUT0_DUTY_CYCLE(0.5),
//      .CLKOUT1_DUTY_CYCLE(0.5),
//      .CLKOUT2_DUTY_CYCLE(0.5),
//      .CLKOUT3_DUTY_CYCLE(0.5),
//      .CLKOUT4_DUTY_CYCLE(0.5),
//      .CLKOUT5_DUTY_CYCLE(0.5),
//      // CLKOUT0_PHASE - CLKOUT5_PHASE: Phase offset for CLKOUT outputs (-360.000-360.000).
//      .CLKOUT0_PHASE(0.0),
//      .CLKOUT1_PHASE(0.0),
//      .CLKOUT2_PHASE(0.0),
//      .CLKOUT3_PHASE(90.0),
//      .CLKOUT4_PHASE(0.0),
//      .CLKOUT5_PHASE(0.0),
//      .COMPENSATION("SYSTEM_SYNCHRONOUS"),   // ZHOLD, BUF_IN, EXTERNAL, INTERNAL
//      .DIVCLK_DIVIDE(1),        // Master division value (1-56)
//      // REF_JITTER: Reference input jitter in UI (0.000-0.999).
//      .REF_JITTER1(0.005000),
//      .REF_JITTER2(0.0),
//      .STARTUP_WAIT("FALSE")    // Delay DONE until PLL Locks, ("TRUE"/"FALSE")
//   )
//   PLLE2_ADV_inst (
//      // Clock Outputs: 1-bit (each) output: User configurable clock outputs
//      .CLKOUT0(CLKOUT0_BUF),   // 1-bit output: CLKOUT0
//      .CLKOUT1(CLKOUT1_BUF),   // 1-bit output: CLKOUT1
//      .CLKOUT2(CLKOUT2_BUF),   // 1-bit output: CLKOUT2
//      .CLKOUT3(CLKOUT3_BUF),   // 1-bit output: CLKOUT3
//      .CLKOUT4(),   // 1-bit output: CLKOUT4
//      .CLKOUT5(),   // 1-bit output: CLKOUT5
//      // DRP Ports: 16-bit (each) output: Dynamic reconfiguration ports
//      .DO(),             // 16-bit output: DRP data
//      .DRDY(),         // 1-bit output: DRP ready
//      // Feedback Clocks: 1-bit (each) output: Clock feedback ports
//      .CLKFBOUT(CLKFBOUT_CLKFBIN), // 1-bit output: Feedback clock
//      .LOCKED(LOCKED_OUT),     // 1-bit output: LOCK
//      // Clock Inputs: 1-bit (each) input: Clock inputs
//      .CLKIN1(CLKIN1_IBUFG),     // 1-bit input: Primary clock
//      .CLKIN2(GND_BIT),     // 1-bit input: Secondary clock
//      // Control Ports: 1-bit (each) input: PLL control ports
//      .CLKINSEL(VCC_BIT), // 1-bit input: Clock select, High=CLKIN1 Low=CLKIN2
//      .PWRDWN(PWRDWN),     // 1-bit input: Power-down
//      .RST(RST_IN),           // 1-bit input: Reset
//      // DRP Ports: 7-bit (each) input: Dynamic reconfiguration ports
//      .DADDR(GND_BUS_5[4:0]),       // 7-bit input: DRP address
//      .DCLK(GND_BIT),         // 1-bit input: DRP clock
//      .DEN(GND_BIT),           // 1-bit input: DRP enable
//      .DI(GND_BUS_16[15:0]),             // 16-bit input: DRP data
//      .DWE(GND_BIT),           // 1-bit input: DRP write enable
//      // Feedback Clocks: 1-bit (each) input: Clock feedback ports
//      .CLKFBIN(CLKFBOUT_CLKFBIN)    // 1-bit input: Feedback clock
//   );

    clk_wiz u_clk_wiz
   (
    .clk_in2(GND_BIT),      // input clk_in2
    .clk_in_sel(VCC_BIT),   // input clk_in_sel
    // Clock out ports
    .clk_out1(CLKOUT0_BUF),     // output clk_out1
    .clk_out2(CLKOUT1_BUF),     // output clk_out2
    .clk_out3(CLKOUT2_BUF),     // output clk_out3
    .clk_out4(CLKOUT3_BUF),     // output clk_out4
    // Status and control signals
    .reset(RST_IN), // input reset
    .locked(LOCKED_OUT),       // output locked
   // Clock in ports
    .clk_in1(CLKIN1_IBUFG)      // input clk_in1
);


endmodule
